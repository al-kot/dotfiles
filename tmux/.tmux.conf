bind-key C-b send-prefix

unbind %
bind | split-window -h

unbind '"'
bind - split-window -v

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'
unbind r
bind r source-file ~/.tmux.conf

set-option -g default-shell '/bin/zsh'
set-option -g default-terminal "tmux-256color"
# set -g default-terminal "${TERM}"
set-option -sa terminal-overrides ',xterm-kitty:Tc'

set -g mouse on

set -g mode-keys vi
set -g status-keys emacs

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'n' send -X cursor-down
bind-key -T copy-mode-vi 'e' send -X cursor-up
bind-key -T copy-mode-vi 'i' send -X cursor-right

set -gq allow-passthrough on
set-option -g focus-events on
set -g visual-activity off

bind s display-popup -E -h 80% -w 80% "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --preview 'tmux capture-pane -ep -t {}' --preview-window=noborder,right,90% --border=none --no-height  |\
    xargs tmux switch-client -t"
bind k display-popup -E -h 30% -w 10% "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed -r '/^\s*$/d' |\
    fzf --reverse -m --border=none --no-height |\
    xargs -I {} tmux kill-session -t {}"
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"

unbind -T copy-mode-vi MouseDragEnd1Pane

set -sg escape-time 0

set -g @plugin 'tmux-plugins/tpm'

# set -g @plugin 'mrjones2014/smart-splits.nvim'
# set -g @smart-splits_move_left_key  'M-h'
# set -g @smart-splits_move_down_key  'M-n'
# set -g @smart-splits_move_up_key    'M-e'
# set -g @smart-splits_move_right_key 'M-i'

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n M-h select-pane -L
bind-key -n M-n select-pane -D
bind-key -n M-e select-pane -U
bind-key -n M-i select-pane -R

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h' 'resize-pane -L 3'
bind-key -n C-n if -F "#{@pane-is-vim}" 'send-keys C-n' 'resize-pane -D 3'
bind-key -n C-e if -F "#{@pane-is-vim}" 'send-keys C-e' 'resize-pane -U 3'
bind-key -n C-i if -F "#{@pane-is-vim}" 'send-keys C-i' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"



# set -g @smart-splits_resize_left_key  'C-h'
# set -g @smart-splits_resize_down_key  'C-n'
# set -g @smart-splits_resize_up_key    'C-e'
# set -g @smart-splits_resize_right_key 'C-i'
#
# set -g @smart-splits_resize_step_size '3'


set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'


set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'


set -g status-position "bottom"
set -g status-style bg=default,fg="#7c6f64"
set -g status-justify "centre"
set -g status-left "#[bg=default]#{?client_prefix,, tmux }#[bg=#83a598,fg=#32302f]#{?client_prefix, tmux ,}"
set -g status-right "#S"
set -g window-status-format " #I:#W "
set -g window-status-current-format "#[bg=#8ec07c,fg=#32302f] #I:#W#{?window_zoomed_flag, ó°Š“ , }"

set -g pane-active-border-style bg=default,fg="#e78a4e"
set -g pane-border-style bg=default,fg="#32302f"
set -g pane-border-indicators arrows

run '~/.tmux/plugins/tpm/tpm'
unbind -n Tab
